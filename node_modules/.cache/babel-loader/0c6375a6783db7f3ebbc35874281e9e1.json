{"ast":null,"code":"var _jsxFileName = \"/home/parallels/PycharmProjects/frontend/src/pages/games/games.jsx\";\nimport React, { Component } from 'react';\nimport { BACKEND, TEAM_IMAGE } from '../../config';\nimport './games.css';\n/**\n * The games page which shows the detail of the game, which contains the winner,\n * each players' stat in that game, and possibly the mvp of the game ( generated by users' votes )\n */\n\nclass Games extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getStats = function () {\n      let url = BACKEND + '/games/gameStats/' + this.state.id;\n      fetch(url).then(res => {\n        return res.json();\n      }).then(data => {\n        this.setState({\n          stats: data\n        });\n      });\n    };\n\n    this.getGameInfo = function () {\n      let url = BACKEND + '/games/gameInfo/' + this.state.id;\n      fetch(url).then(res => {\n        return res.json();\n      }).then(data => {\n        this.setState({\n          gameInfo: data\n        });\n      });\n    };\n\n    this.getTeamMap = function () {\n      let url = BACKEND + '/teamMap';\n      fetch(url).then(res => {\n        return res.json();\n      }).then(data => {\n        this.setState({\n          map: data\n        });\n      });\n    };\n\n    this.state = {\n      stats: [],\n      id: this.props.match.params.gameId,\n      map: {},\n      gameInfo: {}\n    };\n    this.getStats = this.getStats.bind(this);\n    this.getTeamMap = this.getTeamMap.bind(this);\n    this.getGameInfo = this.getGameInfo.bind(this);\n  }\n\n  componentDidMount() {\n    this.getStats();\n    this.getGameInfo();\n    this.getTeamMap();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"gamesOuterBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"gamesInnerBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: TEAM_IMAGE + this.state.map[this.state.gameInfo.team1_id] + '_logo.svg',\n      className: \"infoImg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: TEAM_IMAGE + this.state.map[this.state.gameInfo.team2_id] + '_logo.svg',\n      className: \"infoImg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })), React.createElement(\"table\", {\n      className: \"gamesTable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"PTS\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"REB\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"AST\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"STL\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"BLK\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"TOV\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"3PA\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"3PM\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"FGA\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"FGM\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"MIN\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this.state.stats.map((element, idx) => {\n      let row = 'odd';\n\n      if (idx % 2 === 0) {\n        row = 'even';\n      }\n\n      return React.createElement(\"tr\", {\n        className: row,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, element.name), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, element.scores), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, element.rebounds), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, element.assists), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, element.steals), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, element.blocks), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, element.turnovers), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, element.three_hit), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, element.three_made), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, element.hit), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, element.made), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, element.time), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \" vote \"));\n    }))));\n  }\n\n}\n\nexport default Games;","map":{"version":3,"sources":["/home/parallels/PycharmProjects/frontend/src/pages/games/games.jsx"],"names":["React","Component","BACKEND","TEAM_IMAGE","Games","constructor","props","getStats","url","state","id","fetch","then","res","json","data","setState","stats","getGameInfo","gameInfo","getTeamMap","map","match","params","gameId","bind","componentDidMount","render","team1_id","team2_id","element","idx","row","name","scores","rebounds","assists","steals","blocks","turnovers","three_hit","three_made","hit","made","time"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport { BACKEND, TEAM_IMAGE } from '../../config'\n\nimport './games.css'\n\n\n\n/**\n * The games page which shows the detail of the game, which contains the winner,\n * each players' stat in that game, and possibly the mvp of the game ( generated by users' votes )\n */\nclass Games extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            stats : [],\n            id : this.props.match.params.gameId,\n            map : {},\n            gameInfo : {}\n        };\n        this.getStats = this.getStats.bind( this );\n        this.getTeamMap = this.getTeamMap.bind(this);\n        this.getGameInfo = this.getGameInfo.bind(this);\n    }\n\n    componentDidMount() {\n        this.getStats();\n        this.getGameInfo();\n        this.getTeamMap();\n    }\n\n    getStats = function() {\n        let url = BACKEND + '/games/gameStats/' + this.state.id;\n        fetch( url ).then( res => {\n            return res.json();\n        }).then( data => {\n            this.setState( { stats : data } );\n        });\n    };\n\n    getGameInfo = function() {\n        let url = BACKEND + '/games/gameInfo/' + this.state.id;\n        fetch( url ).then( res => {\n            return res.json();\n        }).then( data => {\n            this.setState( { gameInfo : data } );\n        });\n    };\n\n    /**\n     * get a map which maps the id of a team to the name of the team\n     */\n    getTeamMap = function() {\n        let url = BACKEND + '/teamMap';\n        fetch( url ).then( res => {\n            return res.json();\n        }).then( data => {\n            this.setState( { map : data } )\n        });\n    };\n\n    render() {\n        return (\n            <div className='gamesOuterBox'>\n                <div className='gamesInnerBox'>\n                    <img src={ TEAM_IMAGE + this.state.map[this.state.gameInfo.team1_id] + '_logo.svg' } className='infoImg'/>\n                    <img src={ TEAM_IMAGE + this.state.map[this.state.gameInfo.team2_id] + '_logo.svg' } className='infoImg'/>\n                </div>\n                <table className='gamesTable'>\n                        <thead>\n                            <tr>\n                                <th>Name</th>\n                                <th>PTS</th>\n                                <th>REB</th>\n                                <th>AST</th>\n                                <th>STL</th>\n                                <th>BLK</th>\n                                <th>TOV</th>\n                                <th>3PA</th>\n                                <th>3PM</th>\n                                <th>FGA</th>\n                                <th>FGM</th>\n                                <th>MIN</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            { this.state.stats.map( ( element, idx) => {\n                                let row = 'odd';\n                                if ( idx % 2 === 0) {\n                                    row = 'even';\n                                }\n                                return (\n                                    <tr className={ row }>\n                                        <th>{ element.name }</th>\n                                        <th>{ element.scores }</th>\n                                        <th>{ element.rebounds }</th>\n                                        <th>{ element.assists }</th>\n                                        <th>{ element.steals }</th>\n                                        <th>{ element.blocks }</th>\n                                        <th>{ element.turnovers }</th>\n                                        <th>{ element.three_hit }</th>\n                                        <th>{ element.three_made }</th>\n                                        <th>{ element.hit }</th>\n                                        <th>{ element.made }</th>\n                                        <th>{ element.time }</th>\n                                        <button> vote </button>\n                                    </tr>\n                                )\n                            } ) }\n                        </tbody>\n                    </table>\n            </div>\n        )\n    }\n}\n\nexport default Games;"]},"metadata":{},"sourceType":"module"}