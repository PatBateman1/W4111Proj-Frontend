{"ast":null,"code":"var _jsxFileName = \"/home/parallels/PycharmProjects/frontend/src/pages/teamlist/teamlist.jsx\";\nimport React, { Component } from 'react';\nimport { BACKEND, TEAM_IMAGE } from '../../config';\nimport TeamInfo from './teamInfo';\nimport './teamlist.css';\n/*\n    Team List page\n */\n\nclass TeamList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getTeams = function () {\n      let url = BACKEND + 'teamList';\n      fetch(url).then(res => {\n        return res.json();\n      }).then(data => {\n        this.setState({\n          teams: data\n        });\n      });\n    };\n\n    this.getPlayers = function () {\n      let url = BACKEND + 'team/' + this.state.team.id;\n      fetch(url).then(res => {\n        return res.json();\n      }).then(data => {\n        this.setState({\n          players: data\n        });\n      });\n    };\n\n    this.chooseTeam = function (event) {\n      console.log(event.target.parentNode);\n      let id = event.target.localName === 'div' ? event.target.id : event.target.parentId;\n      this.setState({\n        team: this.state.teams[id]\n      }, this.getPlayers);\n    };\n\n    this.state = {\n      team: {\n        id: 0,\n        name: 'Atlanta Hawks',\n        region: 'Southeast'\n      },\n      players: [],\n      teams: []\n    };\n    this.chooseTeam = this.chooseTeam.bind(this);\n    this.getTeams = this.getTeams.bind(this);\n    this.getPlayers = this.getPlayers.bind(this);\n  }\n\n  componentDidMount() {\n    this.getTeams();\n    this.getPlayers();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {} // this.getPlayers();\n  // get all team as an array from backend\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"teamList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"teams\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.state.teams.map(element => {\n      return React.createElement(\"div\", {\n        id: element.id,\n        className: \"team\",\n        onClick: this.chooseTeam,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: TEAM_IMAGE + element.short + '_logo.svg',\n        className: \"team_img_small\",\n        alt: \"lost\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), element.name, \" \");\n    })), React.createElement(TeamInfo, {\n      players: this.state.players,\n      team: this.state.team,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default TeamList;","map":{"version":3,"sources":["/home/parallels/PycharmProjects/frontend/src/pages/teamlist/teamlist.jsx"],"names":["React","Component","BACKEND","TEAM_IMAGE","TeamInfo","TeamList","constructor","props","getTeams","url","fetch","then","res","json","data","setState","teams","getPlayers","state","team","id","players","chooseTeam","event","console","log","target","parentNode","localName","parentId","name","region","bind","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","render","map","element","short"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport { BACKEND, TEAM_IMAGE } from '../../config'\nimport TeamInfo from './teamInfo'\nimport './teamlist.css'\n\n\n/*\n    Team List page\n */\n\nclass TeamList extends Component {\n\n    constructor( props ) {\n        super( props );\n        this.state = {\n            team : { id : 0,  name : 'Atlanta Hawks', region : 'Southeast'},\n            players : [],\n            teams : []\n        };\n        this.chooseTeam = this.chooseTeam.bind( this );\n        this.getTeams = this.getTeams.bind( this );\n        this.getPlayers = this.getPlayers.bind( this );\n\n    }\n\n    componentDidMount() {\n        this.getTeams();\n        this.getPlayers();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        // this.getPlayers();\n    }\n\n    // get all team as an array from backend\n    getTeams = function() {\n        let url = BACKEND + 'teamList';\n        fetch( url ).then( res => {\n            return res.json();\n        }).then( data => {\n            this.setState( {teams : data} );\n        });\n    };\n\n    // get all players of the team chosen from backend\n    getPlayers = function() {\n        let url = BACKEND + 'team/' + this.state.team.id;\n        fetch( url ).then( res => {\n            return res.json();\n        }).then( data => {\n            this.setState( { players : data } );\n        })\n    };\n\n    // set the team in the list as the chosen team\n    chooseTeam = function( event ) {\n        console.log(event.target.parentNode)\n        let id = event.target.localName === 'div' ? event.target.id : event.target.parentId;\n        this.setState( { team : this.state.teams[id]} , this.getPlayers );\n\n    };\n\n    render() {\n        return (\n            <div className='teamList'>\n                <div className='teams'>\n                    {\n                        this.state.teams.map( ( element ) => {\n                            return (<div id={ element.id }\n                                         className='team'\n                                         onClick={ this.chooseTeam }>\n                                            <img src={ TEAM_IMAGE + element.short + '_logo.svg' }\n                                                 className='team_img_small'\n                                                 alt='lost'\n                                            />\n                                            { element.name } </div>)\n                        } )\n                    }\n                </div>\n                < TeamInfo players={ this.state.players } team={ this.state.team } />\n\n\n            </div>\n        )\n    }\n}\n\nexport default TeamList;"]},"metadata":{},"sourceType":"module"}