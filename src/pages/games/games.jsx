import React, { Component } from 'react'

import { BACKEND, TEAM_IMAGE } from '../../config'
import cookie from 'react-cookies'
import Header from '../../components/header'

import './games.css'


/**
 * The games page which shows the detail of the game, which contains the winner,
 * each players' stat in that game, and possibly the mvp of the game ( generated by users' votes )
 */
class Games extends Component {

    constructor(props) {
        super(props);
        this.state = {
            stats : [],
            id : this.props.match.params.gameId,
            map : {},
            gameInfo : {},
            mvp : ''
        };
        this.getStats = this.getStats.bind( this );
        this.getTeamMap = this.getTeamMap.bind(this);
        this.getGameInfo = this.getGameInfo.bind(this);
        this.vote = this.vote.bind(this);
        this.findMVP = this.findMVP.bind( this );
    }

    componentDidMount() {
        this.getStats();
        this.getGameInfo();
        this.getTeamMap();
        this.findMVP();
    }

    getStats = function() {
        let url = BACKEND + '/games/gameStats/' + this.state.id;
        fetch( url ).then( res => {
            return res.json();
        }).then( data => {
            this.setState( { stats : data } );
        });
    };

    getGameInfo = function() {
        let url = BACKEND + '/games/gameInfo/' + this.state.id;
        fetch( url ).then( res => {
            return res.json();
        }).then( data => {
            this.setState( { gameInfo : data } );
        });
    };

    /**
     * get a map which maps the id of a team to the name of the team
     */
    getTeamMap = function() {
        let url = BACKEND + '/teamMap';
        fetch( url ).then( res => {
            return res.json();
        }).then( data => {
            this.setState( { map : data } )
        });
    };


    /**
     * vote for game's MVP
     * @param player_id: id of the player
     * @param game_id: id of the game
     */
    vote = function( player_id, game_id ) {
        let user_id = cookie.load('user_id');

        if ( !user_id ) {
            this.props.history.push( '/login' );
            return;
        }

        let url = BACKEND + 'vote';
        let data  = {
            user_id : user_id,
            player_id : player_id,
            game_id : game_id
        };

        let req = {
            method : 'POST',
            body : JSON.stringify( data ),
            headers : { 'Content-Type' : 'application/json' }
        };

        fetch( url, req ).then( res => {
            return res.json();
        }).then( data => {
            if ( data.err ) {
                alert( data.err );
                return;
            }
            if ( data.success ) {
                alert( 'successfully vote' );
                this.findMVP();
            }
        });
    };

    /**
     * find the mvp of the game based on the users' votes
     * if no user vote for the game, choose the player with
     * the highest score as mvp
     */
    findMVP = function() {
        let url = BACKEND + 'mvp/' + this.state.id;
        fetch( url ).then( res => {
            return res.json();
        }).then( data =>{
            this.setState( { mvp : data.name } )
        });
    };

    render() {
        return (
            <div>
                <Header/>
                <div className='gamePageOuter'>


                    <div className='gamesOuterBox'>
                        <div className='gamesInnerBox'>
                            <img src={ TEAM_IMAGE + this.state.map[this.state.gameInfo.team1_id] + '_logo.svg' } className='infoImg'/>
                            <div  className='mvpBox'>
                                MVP: { this.state.mvp }
                            </div>
                            <img src={ TEAM_IMAGE + this.state.map[this.state.gameInfo.team2_id] + '_logo.svg' } className='infoImg'/>
                        </div>

                        <table className='gamesTable'>
                                <thead>
                                    <tr>
                                        <th>Name</th>
                                        <th>PTS</th>
                                        <th>REB</th>
                                        <th>AST</th>
                                        <th>STL</th>
                                        <th>BLK</th>
                                        <th>TOV</th>
                                        <th>3PA</th>
                                        <th>3PM</th>
                                        <th>FGA</th>
                                        <th>FGM</th>
                                        <th>MIN</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    { this.state.stats.map( ( element, idx) => {
                                        let row = 'odd';
                                        if ( idx % 2 === 0) {
                                            row = 'even';
                                        }
                                        return (
                                            <tr className={ row }>
                                                <th>{ element.name }</th>
                                                <th>{ element.scores }</th>
                                                <th>{ element.rebounds }</th>
                                                <th>{ element.assists }</th>
                                                <th>{ element.steals }</th>
                                                <th>{ element.blocks }</th>
                                                <th>{ element.turnovers }</th>
                                                <th>{ element.three_hit }</th>
                                                <th>{ element.three_made }</th>
                                                <th>{ element.hit }</th>
                                                <th>{ element.made }</th>
                                                <th>{ element.time }</th>
                                                <button className='voteBtn' onClick={ () => {
                                                    this.vote( element.player_id, this.state.id );
                                                } }> vote </button>
                                            </tr>
                                        )
                                    } ) }
                                </tbody>
                            </table>
                    </div>
                </div>
            </div>
        )
    }
}

export default Games;